name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: 'main'

jobs:
  quality:
    strategy:
      matrix:
        node-version: [18.6.0] 
        os: [ubuntu-latest] 
        

    runs-on: ${{ matrix.os }}

   

    steps:
    - name: checkout the repo
      uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache node modules
      id: cache-npm
      uses: actions/cache@v3
      env:
        cache-name: cache-node-modules
      with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

    - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
      name: List the state of node modules
      continue-on-error: true
      run: npm list

 
        
    - name: install dependences  
      if: steps.cache-npm.outputs.cache-hit != 'true'  
      run: npm ci

    - name: test  
      run: npm test
  
  publish:
    strategy:
      matrix:
        node-version: [18.6.0] 
        os: [ubuntu-latest] 

    runs-on: ${{ matrix.os }}
    if: ${{ github.ref == 'refs/heads/main' }} 
    permissions:  
      contents: write
      issues: write
      pull-requests: write
      id-token: write
     
    needs: [quality]
    steps: 
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - name: install dependences    
      run: npm ci
      env: 
        GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }} 
    - name: push    
      run: npm run semantic-release


      

        
