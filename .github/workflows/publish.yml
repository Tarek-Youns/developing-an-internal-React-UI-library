name: Node.js CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: 'main'

jobs:
  quality:
    strategy:
      matrix:
        node-version: [18.6.0] 
        os: [ubuntu-latest] 
        

    runs-on: ${{ matrix.os }}

   

    steps:
    - name: checkout the repo
      uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}

    - name: Attempt to restore the cache
      uses: actions/cache@v3
      id: cache
      with:
        path: ./node_modules
          # The hashFiles function is used to generate a unique key for the cache based on the contents of the package-lock.json file.
          # This ensures that the cache is only invalidated when the dependencies of the project change.
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          # 'restore-keys' are fallback keys used if a cache miss occurs on the 'key' field. They provide a way to restore
          # a cache from a previous state that doesn't match exactly with the 'key'. They are checked sequentially until a cache hit is found.
          # A list of restore-keys is useful when you are restoring a cache from another branch because restore-keys can partially match cache keys.
        restore-keys: |
          ${{ runner.os }}-node-
          ${{ runner.os }}-

    - name: Install dependencies if cache miss
      if: steps.cache.outputs.cache-hit != 'true'
      run: npm ci

    - name: Save the cache after installing dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      uses: actions/cache@v3
      with:
        path: ./node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        
    - name: test  
      run: npm test
  
  publish:
    strategy:
      matrix:
        node-version: [18.6.0] 
        os: [ubuntu-latest] 

    runs-on: ${{ matrix.os }}
    if: ${{ github.ref == 'refs/heads/main' }} 
    permissions:  
      contents: write
      issues: write
      pull-requests: write
      id-token: write
     
    needs: [quality]
    steps: 
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - name: install dependences    
      run: npm ci
      env: 
        GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }} 
    - name: push    
      run: npm run semantic-release


      

        
